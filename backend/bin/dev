#!/usr/bin/env ruby

# This script must be run from the Rails root directory (e.g., ./bin/dev)

require 'dotenv/load'
require 'socket'
require 'timeout'

# --- Configuration ---
LOCAL_PORT = 3307
DB_PORT = 3306
PID_FILE = File.expand_path('../tmp/pids/autossh.pid', __dir__)
# --- End Configuration ---

# Function to check if a port is open
def port_open?(ip, port, seconds = 1)
  Timeout.timeout(seconds) do
    TCPSocket.new(ip, port).close
    true
  rescue Errno::ECONNREFUSED, Errno::EHOSTUNREACH
    false
  end
rescue Timeout::Error
  false
end

# --- Main Script ---

# 1. Clean up and stop any old tunnels on exit
at_exit do
  if File.exist?(PID_FILE)
    pid = File.read(PID_FILE).to_i
    puts "\n=> Exiting. Stopping SSH tunnel (PID: #{pid})..."
    begin
      Process.kill('TERM', pid)
    rescue Errno::ESRCH
      # Process already gone
    end
    File.delete(PID_FILE)
  end
end

# 2. Construct the autossh command from .env variables
bastion_host = ENV['BASTION_HOST']
bastion_user = ENV['BASTION_USER']
# IMPORTANT: Expand path to handle '~' correctly
bastion_key = File.expand_path(ENV['BASTION_KEYFILE_PATH'])
db_host = ENV['DB_HOST']

if [bastion_host, bastion_user, bastion_key, db_host].any?(&:nil?)
  puts "=> ERROR: Missing one or more required variables in your .env file."
  exit 1
end

command = [
  "autossh -M 0 -f -N",
  "-o \"ServerAliveInterval=60\"",
  "-o \"ServerAliveCountMax=3\"",
  "-o \"ExitOnForwardFailure=yes\"",
  "-L #{LOCAL_PORT}:#{db_host}:#{DB_PORT}",
  "-i #{bastion_key}",
  "#{bastion_user}@#{bastion_host}"
].join(' ')

# 3. Start the SSH tunnel
puts "=> Starting SSH tunnel..."
pid = spawn(command)
Process.detach(pid)
File.write(PID_FILE, pid)

# 4. Wait for the tunnel to be ready
puts "=> Waiting for tunnel on port #{LOCAL_PORT}..."
max_retries = 15
retries = 0
until port_open?('127.0.0.1', LOCAL_PORT)
  if retries >= max_retries
    puts "=> ERROR: Tunnel failed to start after #{max_retries} seconds."
    puts "=> Please run the following command manually to debug:"
    puts "\n   #{command.gsub('-f -N', '-v -N')}\n"
    exit 1
  end
  sleep(1)
  retries += 1
end
puts "=> SSH Tunnel is active (PID: #{pid})."

# 5. Start the Rails server
puts "=> Starting Rails server..."
exec('bundle exec rails s -p 3001')